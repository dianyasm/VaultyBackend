// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int @id @default(autoincrement())
  name      String 
  surname   String?
  email     String @unique
  password  String
  role      String?  // admin user null
  active    Boolean @default(true)
  acceptNotifications Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  series    Series[]
  rates     Rate[]
  quejas    Quejas[]
}

model Series {
  id          Int @id @default(autoincrement())
  title       String
  description String?
  active      Boolean @default(true)
  seasons     Int @default(1)
  episodes    Int @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  idUserCreator Int
  
  // FK
  idGenre     Int?
  genre       Genre?  @relation(fields: [idGenre], references: [id])

  userCreator   User  @relation(fields: [idUserCreator], references: [id])
  rates   Rate[]
}

model Genre {
  id          Int @id @default(autoincrement())
  name        String  @unique

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  series      Series[]
}

model Rate{
  idUser  Int
  idSerie Int
  value   Int  

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt   

  user  User  @relation(fields: [idUser], references: [id])
  series  Series  @relation(fields: [idSerie], references: [id])

  @@id([idUser, idSerie])
}

model Quejas {
  id          Int      @id @default(autoincrement())
  idUser      Int  
  motivo      String   
  descripcion String 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [idUser], references: [id])

  @@index([idUser])
}
